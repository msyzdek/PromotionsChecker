/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import calculated.Item;
import controlers.MainWindowsControler;
import db.entities.Discounts;
import db.entities.Warehouse;
import exceptions.ProcessingException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Miro
 */
public class MainWindow extends javax.swing.JFrame {

    private JFileChooser fileChooser = new JFileChooser();
    private JFileChooser directoryChooser;
    private MainWindowsControler controler;
    
    public MainWindow() throws Exception {
        extendedInitComponents();
        controler = new MainWindowsControler(this);
        repaintItemsTable();
    }

    private void extendedInitComponents(){
        initComponents();
        items = new ArrayList<Item>();
        directoryChooser = new JFileChooser();
        directoryChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jMenuItem1 = new javax.swing.JMenuItem();
        PromotionCheckerPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("PromotionCheckerPU").createEntityManager();
        discountsQuery = java.beans.Beans.isDesignTime() ? null : PromotionCheckerPUEntityManager.createQuery("SELECT d FROM Discounts d order by d.name");
        discountsList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(discountsQuery.getResultList());
        warehouseQuery = java.beans.Beans.isDesignTime() ? null : PromotionCheckerPUEntityManager.createQuery("SELECT w FROM Warehouse w order by w.name");
        warehouseList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(warehouseQuery.getResultList());
        mainTable = new javax.swing.JTabbedPane();
        warehousePanel = new javax.swing.JScrollPane();
        warehouseTable = new javax.swing.JTable();
        discountPanel = new javax.swing.JScrollPane();
        discountTable = new javax.swing.JTable();
        sumupPanel = new javax.swing.JScrollPane();
        sumupTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        readWarehouse = new javax.swing.JMenuItem();
        readDiscounts = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainTable.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        warehouseTable.setColumnSelectionAllowed(true);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, warehouseList, warehouseTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${price}"));
        columnBinding.setColumnName("Price");
        columnBinding.setColumnClass(Float.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${amount}"));
        columnBinding.setColumnName("Amount");
        columnBinding.setColumnClass(Integer.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        warehousePanel.setViewportView(warehouseTable);
        warehouseTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        mainTable.addTab("Stan magazynu", warehousePanel);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, discountsList, discountTable);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Nazwa");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${amountinpercentage}"));
        columnBinding.setColumnName("%");
        columnBinding.setColumnClass(Float.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        discountPanel.setViewportView(discountTable);

        mainTable.addTab("Rabaty", discountPanel);

        sumupTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nazwa", "Cena ", "Rabat %", "Rabat PLN", "Cena po rabacie"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sumupPanel.setViewportView(sumupTable);

        mainTable.addTab("Ceny z uwzględnieniem rabatów", sumupPanel);

        jMenu1.setText("Plik");

        jMenu3.setText("Wczytaj");

        readWarehouse.setText("Stan magazynu");
        readWarehouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readWarehouseActionPerformed(evt);
            }
        });
        jMenu3.add(readWarehouse);

        readDiscounts.setText("Rabaty");
        readDiscounts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readDiscountsActionPerformed(evt);
            }
        });
        jMenu3.add(readDiscounts);

        jMenu1.add(jMenu3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Pomoc");

        jMenuItem3.setText("Instrukcja");
        jMenu2.add(jMenuItem3);

        jMenu4.setText("Zapisz przykładowy plik");

        jMenuItem5.setText("Rabaty");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem5);

        jMenuItem6.setText("Stan magazynu");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem6);

        jMenu2.add(jMenu4);

        jMenuItem4.setText("Informacje");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTable, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTable, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void readWarehouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readWarehouseActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal != 0){
            return;
        }
        controler.readWarehouseFromXml(fileChooser.getSelectedFile());
    }//GEN-LAST:event_readWarehouseActionPerformed

    private void readDiscountsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readDiscountsActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal != 0){
            return;
        }
        controler.readDiscountsFromXml(fileChooser.getSelectedFile());
    }//GEN-LAST:event_readDiscountsActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        JFrame infoView = new InfoWindow();
        infoView.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        infoView.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        int returnVal = directoryChooser.showOpenDialog(this);
        if (returnVal != 0){
            return;
        }
        controler.saveDiscountFileExample(directoryChooser.getSelectedFile());
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        int returnVal = directoryChooser.showOpenDialog(this);
        if (returnVal != 0){
            return;
        }
        controler.saveWarehouseFileExample(directoryChooser.getSelectedFile());
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainWindow().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager PromotionCheckerPUEntityManager;
    private javax.swing.JScrollPane discountPanel;
    private javax.swing.JTable discountTable;
    private java.util.List<db.entities.Discounts> discountsList;
    private javax.persistence.Query discountsQuery;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JTabbedPane mainTable;
    private javax.swing.JMenuItem readDiscounts;
    private javax.swing.JMenuItem readWarehouse;
    private javax.swing.JScrollPane sumupPanel;
    private javax.swing.JTable sumupTable;
    private java.util.List<db.entities.Warehouse> warehouseList;
    private javax.swing.JScrollPane warehousePanel;
    private javax.persistence.Query warehouseQuery;
    private javax.swing.JTable warehouseTable;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    private List<Item> items;
    
    public void repaintItemsTable(){
        DefaultTableModel model = (DefaultTableModel) sumupTable.getModel();
        for (int i = 0; i < model.getRowCount(); ++i) {
            model.removeRow(i);
        }
        for (Item item : items){
            model.addRow(item.toArray());
        }
    }
    
    public void repiantWarehouseTable(){
        warehouseList.clear();
        warehouseList.addAll(warehouseQuery.getResultList());
        warehouseTable.repaint();
    }
    
    public void repaintDiscountsTable(){
        discountsList.clear();
        discountsList.addAll(discountsQuery.getResultList());
        discountTable.repaint();
    }
    
    public List<Warehouse> getWarehouseList(){
        return warehouseList;
    }
    
    public List<Discounts> getDiscountsList(){
        return discountsList;
    }
    
    public List<Item> getSumupList(){
        return items;
    }
    
    public void showCriticalError(String message){
        JOptionPane.showMessageDialog(this, "Nieznany błąd. \n" + message, "Błąd", JOptionPane.ERROR_MESSAGE);
    }
    
    public void showError(ProcessingException exception){
        switch(exception.getType()){
            case ProcessingException.MULTI_LINE :
                showError(exception.getErrorList());
                return;
            case ProcessingException.STRING_TYPE :
                showError(exception.getMessage());
        }
    }
    
    private void showError(List<String> list){
        String message = Arrays.toString(list.subList(0, list.size() > 10 ? 10 : list.size()).toArray());
        message = message.substring(1, message.length() - 1);
        if (list.size() > 10) {
            message += ", ...";
        }
        if (message.length() > 150){
            message = message.replaceAll(",", ", \n");
        }
        JOptionPane.showMessageDialog(this, "Błąd podczas wczytywania lini:\n" + message, "Wczytywanie nie powiodło się", JOptionPane.ERROR_MESSAGE);
    }
    
    private void showError(String message){
        JOptionPane.showMessageDialog(this, message, "Błąd podczas wczytywania pliku", JOptionPane.ERROR_MESSAGE);
    }
}
